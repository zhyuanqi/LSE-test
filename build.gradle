//plugins {
//    id 'java'
//}
//
//group 'org.example'
//version '1.0-SNAPSHOT'
//
//sourceCompatibility = 1.8
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    testCompile group: 'junit', name: 'junit', version: '4.12'
//
//}



buildscript {
    ext {
        version_es = '7.4.2'
//    version_c2 = 'org.carrot2:carrot2-core:4.0.0-beta3'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:" + version_es
    }

    wrapper {
        gradleVersion = '6.0'
    }
}

//apply plugin: 'elasticsearch.testclusters'
apply plugin: 'elasticsearch.esplugin'

esplugin {
    name 'rest-handler'
    description 'An example plugin showing how to register a REST handler'
    classname 'org.elasticsearch.example.resthandler.ExampleRestHandlerPlugin'
    licenseFile rootProject.file('licenses/APACHE-LICENSE-2.0.txt')
    noticeFile rootProject.file('NOTICE.txt')
}

// No unit tests in this example
test.enabled = false

task exampleFixture(type: org.elasticsearch.gradle.test.AntFixture) {
    dependsOn testClasses
    env 'CLASSPATH', "${ -> project.sourceSets.test.runtimeClasspath.asPath }"
    executable = new File(project.runtimeJavaHome, 'bin/java')
    args 'org.elasticsearch.example.resthandler.ExampleFixture', baseDir, 'TEST'
}



integTest {
    dependsOn exampleFixture
    runner {
        nonInputProperties.systemProperty 'external.address', "${ -> exampleFixture.addressAndPort }"
    }
}

testingConventions.naming {
    IT {
        baseClass 'org.elasticsearch.test.ESTestCase'
    }
}